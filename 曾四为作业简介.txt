本次作业分为两部分，一是cmd界面的文本程序，二是使用qt制作的图形化程序，均由曾四为（2015141462006）独立完成。

作业简介：

一、编译和运行
1.cmd的源代码因为使用了c++11的新语法特性，即使在dev里添加-std=c++11的编译选项也无法正常编译，务必使用visual studio支持c++11的版本编译（我使用的是vs2015）

2.qt的代码中特有的.ui格式可以直接由记事本打开查看，使用的xml语言。其他的文件可由dev打开。如果编译，需要安装qt5.6。

3.源代码均储存在xx_source文件夹下，可执行文件均储存在xx_execute文件夹下。xx_execute下还包含了程序运行时的截图和依赖的库文件。

4.运行程序时尽量通过程序本身命令结束（避免点右上角的关闭按钮），否则会使程序中断，析构函数不能正常储存结果（可能会丢失test里的记录数据）。

5.如果数据丢失，可以重新从本目录下拷贝后重新测试（test.txt）。为了方便使用，所有储存的数据保存在程序执行的当前文件夹内，命名为test.txt。

二、功能简介
1.cmd的文本程序完美实现了 查看、增加、修改、删除、拨号 要求的5项基本功能。
2.qt的图形化程序实现了上述的5项功能，但拨号的延迟显示功能 因为qt的延迟函数阻塞主进程而不是子窗口，没能实现。

3.数据实现了实时保存的功能，写入到保存文件test.txt里。

4.数据的组织使用set和map内部的最小堆红黑树。

三、总结

这个项目的cmd文本程序我应用了之前学到关于设计模式的知识，结构组织良好，尽量实现了模块间的解耦。而qt的图形化程序因为界面间事件的交互、qt自身数据类型和c++内置数据类型的转换，程序使用了大量的类型转换和重复的代码，显得代码比较混乱。

在今后的学习中应加强对设计模式的学习，实现程序的继承、封装、多态。

qt本身资料比较少，也不系统，给对于qt的学习带来了困难。其中遇到的最大困难有两点，在网上也没有找到，最后是自己独立解决的：
1）编译器mingw报错,无法链接文件。
2）多个界面间如何建立联系。

qt项目还存在的问题：
1.类型转换很多，拖慢程序速度
2.功能的算法实现需要改进
3.界面美化